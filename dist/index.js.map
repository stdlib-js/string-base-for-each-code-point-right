{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE_UTF16_LOW_SURROGATE = /[\\uDC00-\\uDFFF]/; // TODO: replace with stdlib pkg\nvar RE_UTF16_HIGH_SURROGATE = /[\\uD800-\\uDBFF]/; // TODO: replace with stdlib pkg\n\n\n// MAIN //\n\n/**\n* Invokes a function for each Unicode code point in a string, iterating from right to left.\n*\n* @param {string} str - input string\n* @param {Function} clbk - function to invoke\n* @param {*} [thisArg] - execution context\n* @returns {string} input string\n*\n* @example\n* function log( value, index ) {\n*     console.log( '%d: %s', index, value );\n* }\n*\n* forEachRight( 'Hello', log );\n*/\nfunction forEachRight( str, clbk, thisArg ) {\n\tvar len;\n\tvar ch1;\n\tvar ch2;\n\tvar idx;\n\tvar ch;\n\tvar i;\n\n\tlen = str.length;\n\n\t// Process the string one Unicode code unit at a time and handle UTF-16 surrogate pairs as a single Unicode code point...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tch1 = str[ i ];\n\t\tidx = i;\n\t\tch = ch1;\n\n\t\t// Check for a UTF-16 surrogate pair...\n\t\tif ( i > 0 && RE_UTF16_LOW_SURROGATE.test( ch1 ) ) {\n\t\t\t// Check whether the low surrogate is preceded by a high surrogate...\n\t\t\tch2 = str[ i-1 ];\n\t\t\tif ( RE_UTF16_HIGH_SURROGATE.test( ch2 ) ) {\n\t\t\t\t// We found a surrogate pair:\n\t\t\t\tch = ch2 + ch1;\n\t\t\t\ti -= 1; // decrement the index to process the next code unit\n\t\t\t}\n\t\t}\n\t\t// Note: `ch` may be a lone surrogate (e.g., a high surrogate without a following low surrogate or a low surrogate at the start of the input string).\n\n\t\t// Invoke the callback with the code point:\n\t\tclbk.call( thisArg, ch, idx, str );\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = forEachRight;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function for each Unicode code point in a string, iterating from right to left.\n*\n* @module @stdlib/string-base-for-each-code-point-right\n*\n* @example\n* var forEachRight = require( '@stdlib/string-base-for-each-code-point-right' );\n*\n* function log( value, index ) {\n*     console.log( '%d: %s', index, value );\n* }\n*\n* forEachRight( 'Hello', log );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAyB,kBACzBC,EAA0B,kBAoB9B,SAASC,EAAcC,EAAKC,EAAMC,EAAU,CAC3C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,IAHAL,EAAMH,EAAI,OAGJQ,EAAIL,EAAI,EAAGK,GAAK,EAAGA,IACxBJ,EAAMJ,EAAKQ,CAAE,EACbF,EAAME,EACND,EAAKH,EAGAI,EAAI,GAAKX,EAAuB,KAAMO,CAAI,IAE9CC,EAAML,EAAKQ,EAAE,CAAE,EACVV,EAAwB,KAAMO,CAAI,IAEtCE,EAAKF,EAAMD,EACXI,GAAK,IAMPP,EAAK,KAAMC,EAASK,EAAID,EAAKN,CAAI,EAElC,OAAOA,CACR,CAKAJ,EAAO,QAAUG,IC3CjB,IAAIU,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "RE_UTF16_LOW_SURROGATE", "RE_UTF16_HIGH_SURROGATE", "forEachRight", "str", "clbk", "thisArg", "len", "ch1", "ch2", "idx", "ch", "i", "main"]
}
